--Create two Tables
CREATE TABLE userOF(
    id_U  NUMBER  GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY ,
    Uname VARCHAR(50) NOT NULL,
    Fname VARCHAR(40) NOT NULL,
    PhoneN VARCHAR(20),
    Email VARCHAR2(60)NOT NULL
);

CREATE TABLE userLog(
    id_U  NUMBER  GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY ,
    Uname VARCHAR(50) NOT NULL,
    Fname VARCHAR(40) NOT NULL,
    PhoneN VARCHAR(20),
    Email VARCHAR2(60)NOT NULL,
    Cr_date DATE 
);

tables;

--create Trigger for insert
CREATE OR REPLACE TRIGGER user_backup
    AFTER INSERT ON userOF
    REFERENCING NEW AS NEW
    FOR EACH ROW
    BEGIN
    INSERT INTO userLog VALUES(:NEW.id_U,:NEW.Uname,:NEW.Fname,:NEW.PhoneN,:NEW.Email,SYSDATE);
    END;


INSERT INTO userOF VALUES(3,'Aziz Ahmad','M.Hashim','+93782197500','azizahmade318@gmail.com');
INSERT INTO userOF VALUES(3,'Mustafa','M.Hashim','+93700436457','mustafavation420@gmail.com');
INSERT INTO userOF VALUES(4,'Faiz','M.Hashim','+93798436457','faization420@gmail.com');
INSERT INTO userOF VALUES(5,'Mansoor','M.Hashim','+9377436457','mansooravation420@gmail.com');
INSERT INTO userOF VALUES(6,'Nabi Jan','M.Hashim','+93743436457','nabijanation420@gmail.com');


SELECT * FROM userOF;
SELECT * FROM userLog;


--create Trigger for delete
CREATE OR REPLACE TRIGGER user_delete
    After delete ON userOF
    REFERENCING OLD AS OLD
    FOR EACH ROW
    BEGIN
    INSERT INTO userLog(id_U,uname,fname,phonen,email,cr_date)VALUES(:old.id_U,:old.uname,:old.fname,:old.phonen,:OLD.Email,SYSDATE);
    END;
    
DELETE FROM userOF WHERE id_U = 3;

drop trigger user_delete;

--create table for update
CREATE TABLE updatee(
   id_U  NUMBER ,
    Uname VARCHAR(50) NOT NULL,
    Fname VARCHAR(40) NOT NULL,
    PhoneN VARCHAR(20),
    Email VARCHAR2(60)NOT NULL,
    Cr_date DATE ,
    n_id_U  NUMBER  ,
    n_Uname VARCHAR(50) NOT NULL,
    n_Fname VARCHAR(40) NOT NULL,
    n_PhoneN VARCHAR(20),
    n_Email VARCHAR2(60)NOT NULL,
    n_Cr_date DATE 
)

--create Trigger for  update 
CREATE OR REPLACE TRIGGER user_update
    bEFORE UPDATE ON userOF
    REFERENCING NEW AS NEW OLD AS OLD
    FOR EACH ROW
    BEGIN
    INSERT INTO updatee(id_U,Uname,Fname,PhoneN,Email,Cr_date, n_id_U,n_Uname,n_Fname,n_PhoneN,n_Email, n_Cr_date)
    VALUES(:OLD.id_U,:OLD.Uname,:OLD.Fname,:OLD.PhoneN,:OLD.Email,SYSDATE,:NEW.n_id_U,:NEW.n_Uname,:NEW.n_Fname,:NEW.n_PhoneN,:NEW.n_Email,SYSDATE);
    END;


SELECT * FROM UPDATEE;